openapi: 3.0.1
info:
  title: 'Movie theatre'
  description: Films projections manager
  version: 1.0.0
servers:
  - url: https://cinema-STD21029.com

paths:
  /rooms: 
    get:
      tags:
        - Rooms
      summary: Get all Rooms
      operationId: getRooms
      responses:
        '200':
          description: List of Rooms
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Room'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/BadRequest'
  /rooms/{id}:
    get:
      tags:
        - Rooms
      summary: Get all Rooms
      operationId: getRoomsById
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: List of Rooms
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Room'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/BadRequest'
  /projections:
    get:
      tags:
        - Projections
      summary: Get all projections 
      operationId: getProjections
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of projections
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Projection'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                  $ref: '#/components/schemas/BadRequest'
  /projections/{id}:
    get:
      tags:
        - Projections
      summary: Get all projections 
      operationId: getProjections
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of projections
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Projection'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                  $ref: '#/components/schemas/BadRequest'

  /films: 
    get:
      tags:
        - Films
      summary: Get all films
      operationId: getfilms
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
        - name: category
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: List of films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/BadRequest'
    post:
      tags:
        - Films
      summary: Ajouter of films 
      operationId: CreateFilms
      description: Ajouter of films à partir d'a tableau
      requestBody:
        description: films à créer
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateFilm'
        required: true
      responses:  
        '200':
            description: List of films
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateFilm'
        '400':
            description: Bad request
            content:
              application/json:
                schema: 
                  type: array
                  items: 
                    $ref: '#/components/schemas/BadRequest'
    patch:
      tags:
        - Films
      summary: Modifier a film
      operationId: Updatefilm
      description: |
        Modifier les films avec
        * title 
        * duration
        * synopsis
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          required: true  
      requestBody:
        description: Informations à modifier pour le film
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Film'
            examples:
              changeTitleandDuration:
                summary: Change le title et la durée
                description: Comment changer le title et la durée
                value:
                  id: 1
                  title: "Prestige"
                  duration: 120
              changesynopsis:
                summary: change résumé
                value:
                  synopsis: "Comment deux magiciens ..."
        required: true
      responses:  
        '200':
            description: Film modifié
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateFilm'
        '400':
            description: Bad request
            content:
              application/json:
                schema: 
                  type: array
                  items: 
                    $ref: '#/components/schemas/BadRequest'
        '404':
            description: Not foad
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RessourceNotFoad'
    put:
      tags:
        - Films
      summary: Modifier les informations d'a film
      operationId: UpdateAllOfFilm
      description: Modifier le film
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          required: true  
      requestBody:
        description: Informations à modifier
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Film'
        required: true
      responses:  
        '200':
            description: Modifierd films
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Film'
        '400':
            description: Bad request
            content:
              application/json:
                schema: 
                  type: array
                  items: 
                    $ref: '#/components/schemas/BadRequest'
        '404':
            description: Not foad
            content:
              application/json:
                schema: 
                  type: array
                  items:
                    $ref: '#/components/schemas/RessourceNotFoad'
  /films/{id}:
    get:
      tags: 
        - Films
      summary: Get a Film
      operationId: getFilmsById
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: A films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateFilm'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/BadRequest'     
    delete:
      tags:
        - Films
      summary: Delete a film
      operationId: DeletefilmsById
      parameters:
        - name: title
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: film deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  200:
                    type: string
                    example: Ressource deleted
  /films/{Category}: 
    get:
      tags:
        - Films
      summary: Get les films par catégorie
      operationId: getFilmsByCategory
      parameters:
        - name: Category
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of films par catégorie
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/BadRequest'                  

        
components:
  schemas:
    Room:
      type: object
      properties:
        id:
          type: string
          example: A
        capacite:
          type: integer
          example: 80
    Film:
      type: object
      properties:
        id: 
          type: integer
          example: 12
        title: 
          type: string
          example: Tenet
        duration:
          type: integer
          example: 60
        synopsis:
          type: string
          example: A film by Christopher Nolan ...
        categories:
          type: array
          items:
            type: string
          example:
            - action
            - comedie
            - drame  
    NewCategory:
      type: object
      properties:
        id: 
          type: integer
          example: 2
        name:
          type: string
          example: drame
    Category:
      type: object
      properties:
        id: 
          type: integer
          example: 2
        name:
          type: string
          example: drame   
        creationDate: 
          type: string
          format: date-time
    CreateFilm:
      type: object
      properties:
        title: 
          type: string
          example: Tenet
        duration:
          type: integer
          example: 60
        synopsis:
          type: string
          example: A film by Christopher Nolan ...
        categories:
          type: array
          items:
            type: string
          example:
            - action
            - comedie
            - drame
    Projection:
      type: object
      properties:
        id: 
          type: object
          example: 1
        film:
          type: object
          $ref: '#/components/schemas/Film'
        Room: 
          type: object
          $ref: '#/components/schemas/Room'
        diffusion:
          type: string
          format: date-time
          example: '2022-03-13T20:30:00Z'
    NewProjection:
      type: object
      properties:
        filmId:
          type: integer
          example: 1
        roomId:
          type: string
          default: A
          enum:
            - A
            - B
        diffusion:
          type: string
          format: date-time
    RessourceDeleted:
      type: object
      properties:
        200:
          type: string
          example: Ressource deleted
    BadRequest:
      type: object
      properties:
        400:
          type: string
          example: Bad request   
    RessourceNotFoad:
      type: object
      properties:
        404:
          type: string
          example: Ressource not foad   
    
        
