openapi: 3.0.1
info:
  title: 'Movie theatre'
  description: Film projections manager
  version: 1.0.0
servers:
  - url: https://cinema-STD21029.com

paths:
  /rooms: 
    get:
      tags:
        - Rooms
      summary: Get all Rooms
      operationId: getRooms
      responses:
        '200':
          description: List of Rooms
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Room'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/BadRequest'
  /rooms/{id}:
    get:
      tags:
        - Rooms
      summary: Get a room
      operationId: getRoomsById
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: A room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/BadRequest'
  /projections:
    get:
      tags:
        - Projections
      summary: Get all projections 
      operationId: getProjections
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of projections
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Projection'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                  $ref: '#/components/schemas/BadRequest'
    post:
      tags:
        - Projections
      summary: Create a new projection
      operationId: CreateProjection
      requestBody:
        description: Make a new projection
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/NewProjection'
      responses:
        '200':
          description: A projection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projection'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                  $ref: '#/components/schemas/BadRequest'
  /projections/{id}:
    get:
      tags:
        - Projections
      summary: Get a projection
      operationId: getProjectionyId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A projection
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Projection'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                  $ref: '#/components/schemas/BadRequest'
    patch:
      tags:
        - Projections
      summary: Update a projection
      operationId: UpdateProjection
      description: |
        Update a projection with
        * filmId 
        * roomId
        * diffusion
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        description: Informations à modifier pour le film
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Film'
            examples:
              changeFilm:
                summary: update the film to show
                description: How to update the filmId
                value:
                  filmId: 1
              changeRoom: 
                summary: update the room 
                value:
                  roomId: A
              changeDiffusion:
                summary: update the diffusion time
                value:
                  diffusion: '2022-03-13T20:30:00Z'
        required: true
      responses:  
        '200':
            description: Projectioin Updated
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Projection'
        '400':
            description: Bad request
            content:
              application/json:
                schema: 
                  type: array
                  items: 
                    $ref: '#/components/schemas/BadRequest'
        '404':
            description: Not foad
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RessourceNotFound'
    put:
      tags:
        - Projections
      summary: Update the whole projection
      operationId: UpdateAllOfProjection
      description: Update the whole projection
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true  
      requestBody:
        description: A projection to update
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NewProjection'
        required: true
      responses:  
        '200':
            description:  UpdatedProjection
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Projection'
        '400':
            description: Bad request
            content:
              application/json:
                schema: 
                  type: array
                  items: 
                    $ref: '#/components/schemas/BadRequest'
        '404':
            description: Not foad
            content:
              application/json:
                schema: 
                  type: array
                  items:
                    $ref: '#/components/schemas/RessourceNotFound'
    delete:
      tags:
        - Projections
      summary: Delete a projection
      operationId: DeleteProjectionById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: projection deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  200:
                    type: string
                    example: Ressource deleted  
              

  /films: 
    get:
      tags:
        - Films
      summary: Get all films
      operationId: getfilms
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
        - name: category
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: List of films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/BadRequest'
    post:
      tags:
        - Films
      summary: Create films 
      operationId: CreateFilms
      description: Create new Films from an array
      requestBody:
        description: films to create
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateFilm'
        required: true
      responses:  
        '200':
            description: List of films
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateFilm'
        '400':
            description: Bad request
            content:
              application/json:
                schema: 
                  type: array
                  items: 
                    $ref: '#/components/schemas/BadRequest'
    patch:
      tags:
        - Films
      summary: Update a film
      operationId: Updatefilm
      description: |
        Modifier les films avec
        * title 
        * duration
        * synopsis
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          required: true  
      requestBody:
        description: Film to update
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Film'
        required: true
      responses:  
        '200':
            description: Film modifié
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateFilm'
        '400':
            description: Bad request
            content:
              application/json:
                schema: 
                  type: array
                  items: 
                    $ref: '#/components/schemas/BadRequest'
        '404':
            description: Not foad
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RessourceNotFound'
    put:
      tags:
        - Films
      summary: Update the whole film
      operationId: UpdateAllOfFilm
      description: Update the film
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          required: true  
      requestBody:
        description: Film to update
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Film'
        required: true
      responses:  
        '200':
            description: Updated films
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Film'
        '400':
            description: Bad request
            content:
              application/json:
                schema: 
                  type: array
                  items: 
                    $ref: '#/components/schemas/BadRequest'
        '404':
            description: Not foad
            content:
              application/json:
                schema: 
                  type: array
                  items:
                    $ref: '#/components/schemas/RessourceNotFound'
  /projections/week:
    get:
      tags:
        - Projections
      summary: Get a projection
      operationId: getCalendar
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: A projection
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Calendar'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                  $ref: '#/components/schemas/BadRequest'
  /films/{id}:
    get:
      tags: 
        - Films
      summary: Get a Film
      operationId: getFilmsById
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: A films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateFilm'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/BadRequest'     
    delete:
      tags:
        - Films
      summary: Delete a film
      operationId: DeletefilmsById
      parameters:
        - name: title
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: film deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  200:
                    type: string
                    example: Ressource deleted
  /films/{category}: 
    get:
      tags:
        - Films
      summary: Get films by catogory
      operationId: getFilmsByCategory
      parameters:
        - name: category
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of films by category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/BadRequest'
    put:
      tags:
        - Films
      summary: Update a category
      operationId: UpdateCategory
      description: Update the category name
      parameters:
        - name: category
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        description: the category to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCategory'
        required: true
      responses:  
        '200':
            description: Projectioin Updated
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Category'
        '400':
            description: Bad request
            content:
              application/json:
                schema: 
                  type: array
                  items: 
                    $ref: '#/components/schemas/BadRequest'
        '404':
            description: Not foad
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RessourceNotFound'
    delete:
      tags:
        - Films
      summary: Delete a category
      operationId: DeleteCategoryById
      parameters:
        - name: category
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: category deleted
          content:
             application/json:
                schema:
                  $ref: '#/components/schemas/RessourceDeleted'
    
        
components:
  schemas:
    Room:
      type: object
      properties:
        id:
          type: string
          example: A
        capacite:
          type: integer
          example: 80
    Film:
      type: object
      properties:
        id: 
          type: integer
          example: 12
        title: 
          type: string
          example: Tenet
        duration:
          type: integer
          example: 60
        synopsis:
          type: string
          example: A film by Christopher Nolan ...
        categories:
          type: array
          items:
            type: string
          example:
            - action
            - comedie
            - drame  
    NewCategory:
      type: object
      properties:
        category:
          type: string
          example: drame
    Category:
      type: object
      properties:
        id: 
          type: integer
          example: 2
        category:
          type: string
          example: drame   
        creationDate: 
          type: string
          format: date-time
    CreateFilm:
      type: object
      properties:
        title: 
          type: string
          example: Tenet
        duration:
          type: integer
          example: 60
        synopsis:
          type: string
          example: A film by Christopher Nolan ...
        categories:
          type: array
          items:
            type: string
          example:
            - action
            - comedie
            - drame
    Projection:
      type: object
      properties:
        id: 
          type: object
          example: 1
        filmId:
          type: integer
          example: 1
        roomId:
          type: string
          default: A
          enum:
            - A
            - B
        diffusion:
          type: string
          format: date-time
          example: '2022-03-13T20:30:00Z'
    NewProjection:
      type: object
      properties:
        filmId:
          type: integer
          example: 1
        roomId:
          type: string
          default: A
          enum:
            - A
            - B
        diffusion:
          type: string
          format: date-time
          example: '2022-03-13T20:30:00Z'
    Calendar:
      type: object
      properties:
        week:
          type: string
          format: date-time
        till:
          type: string
          format: date-time
        calendar: 
          type: array
          items:
            $ref: '#/components/schemas/Day'
    Day:
      type: object
      properties:
        day: 
          type: integer
          example: 1
        projections:
          type: array
          items:
            $ref: '#/components/schemas/CurrentProjection'
    CurrentProjection:
      type: object
      properties:
        hour: 
          type: string
          format: date-time
        film: 
          $ref: '#/components/schemas/Film'
        room: 
          $ref: '#/components/schemas/Room'



    RessourceDeleted:
      type: object
      properties:
        200:
          type: string
          example: Ressource deleted
    BadRequest:
      type: object
      properties:
        400:
          type: string
          example: Bad request   
    RessourceNotFound:
      type: object
      properties:
        404:
          type: string
          example: Ressource not found   
    
        
